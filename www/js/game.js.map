{
  "version": 3,
  "sources": [
    "..\\..\\node_modules\\browser-pack\\_prelude.js",
    "..\\..\\src\\game.ts",
    "..\\..\\src\\states\\GameOver.ts",
    "..\\..\\src\\states\\Main.ts",
    "..\\..\\src\\states\\boot.ts",
    "..\\..\\src\\states\\preload.ts"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "/// <reference path=\"../typings/index.d.ts\" />\r\n\r\nimport {Boot} from \"./states/boot\";\r\nimport {Preload} from \"./states/preload\";\r\nimport {Main} from \"./states/Main\";\r\nimport {GameOver} from \"./states/GameOver\";\r\n\r\n// ----------------------------------------------------\r\n\r\nvar game: Phaser.Game;\r\n\r\n// ----------------------------------------------------\r\n\r\nwindow.onload = main;\r\n\r\n// ----------------------------------------------------\r\n\r\nfunction main() {\r\n    game = new Phaser.Game(800, 600, Phaser.AUTO, 'content', {\r\n        create: create,\r\n        \r\n    });\r\n}\r\n\r\n// ----------------------------------------------------\r\n\r\nfunction create() {\r\n    game.state.add(\"boot\", Boot);\r\n    game.state.add (\"preload\", Preload);\r\n    game.state.add (\"main\", Main);\r\n    game.state.add (\"gameover\", GameOver);\r\n\r\n    game.state.start(\"boot\");\r\n}\r\n",
    "export class GameOver extends Phaser.State {\r\n    preload () {\r\n    }\r\n\r\n    create () {\r\n    }\r\n}\r\n",
    "export class Main extends Phaser.State {\r\n    private logo: Phaser.Sprite;\r\n    private progress: Phaser.Line;\r\n\r\n    // ----------------------------------------------------\r\n\r\n    preload() {\r\n        this.game.load.image('logo', 'data/phaser-logo-small.png');\r\n    }\r\n\r\n    // ----------------------------------------------------\r\n\r\n    create() {\r\n        console.log (\"Running game loop\");\r\n        \r\n        let x = this.game.world.centerX;\r\n        let y = this.game.world.centerY;\r\n\r\n        // change the background color\r\n        this.game.stage.backgroundColor = 0xB20059;\r\n\r\n        // create a simple sprite\r\n        this.logo = this.game.add.sprite(x, y, 'logo');\r\n\r\n        // respond to input events\r\n        this.logo.inputEnabled = true;\r\n\r\n        // pivot about the center of the sprite\r\n        this.logo.anchor.set(0.5);\r\n        this.logo.scale.set(0.5);\r\n    }\r\n\r\n    // ----------------------------------------------------\r\n\r\n    loadUpdate() {\r\n        let w = this.game.canvas.width / 2;\r\n        let h = this.game.canvas.height / 2;\r\n\r\n        // calcluate how much progress has been made\r\n        let k = this.game.load.progressFloat * w / 100;\r\n\r\n        // create the progress bar\r\n        this.progress = new Phaser.Line(w / 2, h, w / 2 + k, h);\r\n    }\r\n\r\n    // ----------------------------------------------------\r\n\r\n    loadRender() {\r\n        this.game.debug.geom(this.progress, '#fff');\r\n    }\r\n\r\n    // ----------------------------------------------------\r\n\r\n    update() {\r\n        if (this.logo.input.justPressed()) {\r\n            this.game.add.tween(this.logo.scale)\r\n                .to({x: 1, y: 1}, 500, Phaser.Easing.Cubic.InOut)\r\n                .yoyo(true)\r\n                .start();\r\n        }\r\n    }\r\n\r\n    // ----------------------------------------------------\r\n\r\n    render() {\r\n        this.game.debug.spriteInfo(this.logo, 10, 18);\r\n    }\r\n}\r\n",
    "export class Boot extends Phaser.State {\r\n    preload () {\r\n        console.log (\"Preloading boot data...\");\r\n    }\r\n\r\n    create () {\r\n        this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\r\n\r\n        this.game.state.start (\"preload\");\r\n    }\r\n}\r\n",
    "export class Preload extends Phaser.State {\r\n    preload () {\r\n        console.log (\"Preloading game data...\");\r\n    }\r\n\r\n    create () {\r\n        this.game.state.start (\"main\");\r\n    }\r\n}\r\n"
  ]
}